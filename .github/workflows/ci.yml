name: Python CI & Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # Use pip's cache

    - name: Install system-level dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libsm6 libxext6 libavformat-dev libavdevice-dev libavfilter-dev libswscale-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pre-commit detect-secrets # Install tools for CI steps

    - name: Run pre-commit hooks (Lint, Format, Type-check, Secrets)
      run: |
        pre-commit run --all-files

    - name: Run Pytest and Generate Coverage
      run: |
        pytest --cov=core --cov=ai --cov-report=xml

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.os }}
        path: coverage.xml
        if-no-files-found: 'error'
